plt.semilogx(w, 20*np.log10(abs(h))) 
plt.xscale('log') 
plt.title('Butterworth filter frequency response') 
plt.xlabel('Frequency [Hz]') 
plt.ylabel('Amplitude [dB]') 
plt.margins(0, 0.1) 
plt.grid(which='both', axis='both') 
plt.axvline(100, color='green') 
plt.show() 

imp = signal.unit_impulse(40) 
c, d = signal.butter(N, 0.5) 
response = signal.lfilter(c, d, imp) 
plt.stem(np.arange(0, 40), imp, use_line_collection=True) 
plt.stem(np.arange(0, 40), response, use_line_collection=True) 
plt.margins(0, 0.1) 
plt.xlabel('Time [samples]') 
plt.ylabel('Amplitude') 
plt.grid(True) 
plt.show() 

fig, ax1 = plt.subplots() 
ax1.set_title('Digital filter frequency response') 
ax1.set_ylabel('Angle(radians)', color='g') 
ax1.set_xlabel('Frequency [Hz]') 
angles = np.unwrap(np.angle(h)) 
ax1.plot(w/2*np.pi, angles, 'g') 
ax1.grid() 
ax1.axis('tight') 
plt.show() 
